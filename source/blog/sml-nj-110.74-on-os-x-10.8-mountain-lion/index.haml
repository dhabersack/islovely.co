---
date: 2012-08-05
description: Additional configuration is required to make Mountain Lion and the version of SML/NJ currently being installed via Homebrew play together nicely again.
layout: post
title: SML/NJ 110.74 on OS X 10.8 Mountain Lion
---

%p
  I previously went over
  #{ link_to 'how to install SML on OS X via Homebrew', '/blog/painless-installation-of-sml-on-os-x/', :title => 'Painless installation of SML on OS X' },
  which currently installs version 110.74 of SML/NJ. Unfortunately, this version
  does not work with the recently released OS X 10.8 Mountain Lion out of the
  box. If you are running both SML and OS X at these version numbers, some light
  additional tuning is required.

%p
  Note that this bug
  #{ link_to 'will be fixed in SML/NJ 110.75', 'http://smlnj-gforge.cs.uchicago.edu/tracker/index.php?func=detail&aid=94&group_id=33&atid=215', :title => 'smlnj-gforge: SML/NJ Bugs: Detail: 94 Running on OS X Mountain Lion' }.
  (<strong>Update:</strong> 110.75 is now available.)

%p
  When running version 110.74 on Mountain Lion, the command

%pre
  $ sml

%p
  results in a not overly helpful but easily resolved error:

%pre
  sml: unable to determine architecture/operating system

%p
  What happens here is that SML is unable to handle the operating system number
  of Mountain Lion, so we need to tell it how to interpret that. In order to do
  so, we first need to figure out which directory Homebrew installed SML to.
  Running

%pre
  $ brew info smlnj

%p
  gives us an output similar to the following:

%pre
  :preserve
    smlnj: stable 110.74
    http://www.smlnj.org/
    /usr/local/Cellar/smlnj/110.74 (3950 files, 69M) *
    https://github.com/mxcl/homebrew/commits/master/Library/Formula/smlnj.rb
    ==> Caveats
    This formula spews ML files all over lib, and puts hidden subfolders in bin.
    Because of this, we've installed it to:
      /usr/local/Cellar/smlnj/110.74/libexec
    and we haven't linked it into /usr/local

    You'll need to add:
      /usr/local/Cellar/smlnj/110.74/libexec/bin
    to your PATH.

    Improvements are welcome.

%p
  From this, we can tell that SML has been installed to
  <code>/usr/local/Cellar/smlnj/110.74/libexec</code>.

%p
  Open the file <code>bin/.arch-n-opsys</code> located in this directory in your
  text editor of choice:

%pre
  $ open -t /usr/local/Cellar/smlnj/110.74/libexec/bin/.arch-n-opsys

%p
  Inside, you will find the following instructions, starting at line 63:

%pre
  :preserve
    case `uname -r` in
       8*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.4
       9*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.5
      10*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.6
      11*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.7
        *) exit 1;;

%p
  As you may have noticed, OS X version 10.8 is not listed here yet. Simply add
  a line covering version number <em>12</em>  (as returned by
  <code>uname -r</code>) to this list:

%pre
  :preserve
    case `uname -r` in
       8*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.4
       9*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.5
      10*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.6
      11*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.7
      12*) OPSYS=darwin; HEAP_OPSYS=darwin ;; # MacOS X 10.8
        *) exit 1;;

%p
  When trying to save the change, your text editor is probably going to tell you
  that the file is read-only, but you will have to overwrite the contents here.

%p
  After that, running

%pre
  $ sml

%p
  will once again greet you with the expected command prompt.
